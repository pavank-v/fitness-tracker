{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/pavan-kumar/pavan/dummy/front-end/app/constant.ts"],"sourcesContent":["export const ACCESS_TOKEN: string = 'access';\nexport const REFRESH_TOKEN: string = 'refresh';"],"names":[],"mappings":";;;;AAAO,MAAM,eAAuB;AAC7B,MAAM,gBAAwB"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///home/pavan-kumar/pavan/dummy/front-end/app/api.ts"],"sourcesContent":["import axios, { AxiosError, AxiosInstance, AxiosRequestConfig, AxiosResponse, InternalAxiosRequestConfig } from \"axios\";\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from \"./constant\";\n\nconst api: AxiosInstance = axios.create({\n  baseURL: process.env.url as string,\n});\n\napi.interceptors.request.use(\n  (config: InternalAxiosRequestConfig) => {\n    const token: string | null = localStorage.getItem(ACCESS_TOKEN);\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response: AxiosResponse) => response,\n  async (error: AxiosError) => {\n    const originalRequest = error.config as AxiosRequestConfig & { _retry?: boolean };\n\n    if (error.response?.status == 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      const refreshToken: string | null = localStorage.getItem(REFRESH_TOKEN);\n      if (refreshToken) {\n        try {\n          const res = await axios.post(\n            `${process.env.url}/auth/token/refresh`, { refresh: refreshToken },\n          )\n          if (res.status === 200) {\n            const newAccessToken = res.data.access;\n            localStorage.setItem(ACCESS_TOKEN, newAccessToken)\n\n            if (originalRequest.headers) {\n              originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n            }\n            return api(originalRequest)\n          }\n        }\n        catch (refreshError) {\n          console.error(\"Token refresh failed:\", refreshError);\n\n          localStorage.removeItem(ACCESS_TOKEN);\n          localStorage.removeItem(REFRESH_TOKEN);\n          window.location.href = \"/login\";\n        }\n      } else {\n        console.warn(\"No refresh token was found.\");\n        localStorage.removeItem(ACCESS_TOKEN);\n        localStorage.removeItem(REFRESH_TOKEN);\n        window.location.href = \"/login\";\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"names":[],"mappings":";;;AACA;AADA;;;AAGA,MAAM,MAAqB,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACtC,SAAS,QAAQ,GAAG,CAAC,GAAG;AAC1B;AAEA,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,CAAC;IACC,MAAM,QAAuB,aAAa,OAAO,CAAC,+GAAA,CAAA,eAAY;IAE9D,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAClD;IACA,OAAO;AACT,GACA,CAAC;IACC,QAAQ,MAAM,CAAC;AACjB;AAGF,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC3B,CAAC,WAA4B,UAC7B,OAAO;IACL,MAAM,kBAAkB,MAAM,MAAM;IAEpC,IAAI,MAAM,QAAQ,EAAE,UAAU,OAAO,CAAC,gBAAgB,MAAM,EAAE;QAC5D,gBAAgB,MAAM,GAAG;QAEzB,MAAM,eAA8B,aAAa,OAAO,CAAC,+GAAA,CAAA,gBAAa;QACtE,IAAI,cAAc;YAChB,IAAI;gBACF,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAC1B,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,EAAE;oBAAE,SAAS;gBAAa;gBAEnE,IAAI,IAAI,MAAM,KAAK,KAAK;oBACtB,MAAM,iBAAiB,IAAI,IAAI,CAAC,MAAM;oBACtC,aAAa,OAAO,CAAC,+GAAA,CAAA,eAAY,EAAE;oBAEnC,IAAI,gBAAgB,OAAO,EAAE;wBAC3B,gBAAgB,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,gBAAgB;oBACpE;oBACA,OAAO,IAAI;gBACb;YACF,EACA,OAAO,cAAc;gBACnB,QAAQ,KAAK,CAAC,yBAAyB;gBAEvC,aAAa,UAAU,CAAC,+GAAA,CAAA,eAAY;gBACpC,aAAa,UAAU,CAAC,+GAAA,CAAA,gBAAa;gBACrC,OAAO,QAAQ,CAAC,IAAI,GAAG;YACzB;QACF,OAAO;YACL,QAAQ,IAAI,CAAC;YACb,aAAa,UAAU,CAAC,+GAAA,CAAA,eAAY;YACpC,aAAa,UAAU,CAAC,+GAAA,CAAA,gBAAa;YACrC,OAAO,QAAQ,CAAC,IAAI,GAAG;QACzB;IACF;IACA,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAGa"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///home/pavan-kumar/pavan/dummy/front-end/app/components/ProtectedRoute.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState } from 'react'\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from '../constant';\nimport { jwtDecode } from 'jwt-decode';\nimport api from '../api';\nimport { Navigate } from 'react-router-dom';\n\nconst ProtectedRoute = ({ children }: {children: React.ReactNode}) => {\n    const [isAuthorized, setIsAuthorized] = useState(-1);\n\n    useEffect(() => {\n      auth().catch(() => setIsAuthorized(0));\n    },);\n\n    const refresh = async () => {\n      const refreshToken: string | null = localStorage.getItem(REFRESH_TOKEN);\n\n      try{\n        const res = await api.post(\"auth/token/refresh\", {refresh: refreshToken});\n\n        if (res.status === 200){\n          setIsAuthorized(1);\n          localStorage.setItem(ACCESS_TOKEN, res.data.access);\n        } else {\n          setIsAuthorized(0);\n        }        \n      } catch (error) {\n        console.log(\"Error in Refreshing Token\", error);\n        setIsAuthorized(0);\n      }\n    }\n\n    const auth = async () => {\n      const token: string | null = localStorage.getItem(ACCESS_TOKEN);\n\n      if (!token){\n        setIsAuthorized(0);\n        return;\n      }\n\n      let decode;\n      try{\n        decode = jwtDecode(token);\n      }\n      catch(error){\n        console.log(\"Error in Decoding\", error);\n        setIsAuthorized(0)\n        return;\n      }\n      const tokenExpiration: number | undefined = decode.exp;\n      const now = Date.now() / 1000;\n\n      if (tokenExpiration && tokenExpiration < now){\n        await refresh();\n      } else {\n        setIsAuthorized(1);\n      }\n    };\n\n    if (isAuthorized === -1){\n      return <div> loading... </div>\n    }\n  \n    return (isAuthorized == 1) ? children : <Navigate to=\"/auth/login\" />;\n};\n\nexport default ProtectedRoute\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQA,MAAM,iBAAiB,CAAC,EAAE,QAAQ,EAA+B;IAC7D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,CAAC;IAElD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,OAAO,KAAK,CAAC,IAAM,gBAAgB;IACrC;IAEA,MAAM,UAAU;QACd,MAAM,eAA8B,aAAa,OAAO,CAAC,+GAAA,CAAA,gBAAa;QAEtE,IAAG;YACD,MAAM,MAAM,MAAM,0GAAA,CAAA,UAAG,CAAC,IAAI,CAAC,sBAAsB;gBAAC,SAAS;YAAY;YAEvE,IAAI,IAAI,MAAM,KAAK,KAAI;gBACrB,gBAAgB;gBAChB,aAAa,OAAO,CAAC,+GAAA,CAAA,eAAY,EAAE,IAAI,IAAI,CAAC,MAAM;YACpD,OAAO;gBACL,gBAAgB;YAClB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC,6BAA6B;YACzC,gBAAgB;QAClB;IACF;IAEA,MAAM,OAAO;QACX,MAAM,QAAuB,aAAa,OAAO,CAAC,+GAAA,CAAA,eAAY;QAE9D,IAAI,CAAC,OAAM;YACT,gBAAgB;YAChB;QACF;QAEA,IAAI;QACJ,IAAG;YACD,SAAS,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAD,EAAE;QACrB,EACA,OAAM,OAAM;YACV,QAAQ,GAAG,CAAC,qBAAqB;YACjC,gBAAgB;YAChB;QACF;QACA,MAAM,kBAAsC,OAAO,GAAG;QACtD,MAAM,MAAM,KAAK,GAAG,KAAK;QAEzB,IAAI,mBAAmB,kBAAkB,KAAI;YAC3C,MAAM;QACR,OAAO;YACL,gBAAgB;QAClB;IACF;IAEA,IAAI,iBAAiB,CAAC,GAAE;QACtB,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,OAAO,AAAC,gBAAgB,IAAK,yBAAW,8OAAC,uJAAA,CAAA,WAAQ;QAAC,IAAG;;;;;;AACzD;uCAEe"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}