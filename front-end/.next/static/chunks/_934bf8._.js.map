{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/pavan-kumar/pavan/others/front-end/components/ProtectedRoute.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\n\nimport { useEffect, useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from \"@/lib/constant\"\nimport { jwtDecode } from \"jwt-decode\"\nimport api from \"@/lib/api\"\n\nconst ProtectedRoute = ({ children }: { children: React.ReactNode }) => {\n  const [isAuthorized, setIsAuthorized] = useState<boolean | null>(null);\n  const [isLoading, setIsLoading] = useState(true)\n  const router = useRouter()\n\n  useEffect(() => {\n    if (typeof window === \"undefined\") {\n      return\n    }\n    \n    const checkAuth = async () => {\n      try {\n        await auth()\n      } catch (error) {\n        setIsAuthorized(false)\n        setIsLoading(false)\n      }\n    }\n    checkAuth()\n  }, [])\n\n  const refresh = async () => {\n    const refreshToken = localStorage.getItem(REFRESH_TOKEN)\n\n    try {\n      const res = await api.post(\"auth/token/refresh\", { refresh: refreshToken })\n\n      if (res.status === 200) {\n        setIsAuthorized(true)\n        localStorage.setItem(ACCESS_TOKEN, res.data.access)\n      } else {\n        setIsAuthorized(false)\n      }\n    } catch (error) {\n      console.log(\"Error in Refreshing Token\", error)\n      setIsAuthorized(false)\n    }\n    setIsLoading(false)\n  }\n\n  const auth = async () => {\n    const token = localStorage.getItem(ACCESS_TOKEN)\n\n    if (!token) {\n      setIsAuthorized(false)\n      setIsLoading(false)\n      return\n    }\n\n    try {\n      const decode = jwtDecode(token)\n      const tokenExpiration: number = (decode as any).exp\n      const now = Date.now() / 1000\n\n      if (tokenExpiration < now) {\n        await refresh()\n      } else {\n        setIsAuthorized(true)\n        setIsLoading(false)\n      }\n    } catch (error) {\n      console.log(\"Error in Decoding\", error)\n      setIsAuthorized(false)\n      setIsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (!isLoading && !isAuthorized) {\n      router.replace(\"/auth/login\")\n    }\n  }, [isLoading, isAuthorized, router])\n\n  if (isLoading) {\n    return <div className=\"flex justify-center items-center min-h-screen\">Loading...</div>\n  }\n\n\n  if (!isAuthorized) {\n    return null\n  }\n\n  return children\n}\n\nexport default ProtectedRoute"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;;;AARA;;;;;;AAUA,MAAM,iBAAiB,CAAC,EAAE,QAAQ,EAAiC;;IACjE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IACjE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,uCAAmC;;YAEnC;YAEA,MAAM;sDAAY;oBAChB,IAAI;wBACF,MAAM;oBACR,EAAE,OAAO,OAAO;wBACd,gBAAgB;wBAChB,aAAa;oBACf;gBACF;;YACA;QACF;mCAAG,EAAE;IAEL,MAAM,UAAU;QACd,MAAM,eAAe,aAAa,OAAO,CAAC,kHAAA,CAAA,gBAAa;QAEvD,IAAI;YACF,MAAM,MAAM,MAAM,6GAAA,CAAA,UAAG,CAAC,IAAI,CAAC,sBAAsB;gBAAE,SAAS;YAAa;YAEzE,IAAI,IAAI,MAAM,KAAK,KAAK;gBACtB,gBAAgB;gBAChB,aAAa,OAAO,CAAC,kHAAA,CAAA,eAAY,EAAE,IAAI,IAAI,CAAC,MAAM;YACpD,OAAO;gBACL,gBAAgB;YAClB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC,6BAA6B;YACzC,gBAAgB;QAClB;QACA,aAAa;IACf;IAEA,MAAM,OAAO;QACX,MAAM,QAAQ,aAAa,OAAO,CAAC,kHAAA,CAAA,eAAY;QAE/C,IAAI,CAAC,OAAO;YACV,gBAAgB;YAChB,aAAa;YACb;QACF;QAEA,IAAI;YACF,MAAM,SAAS,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAD,EAAE;YACzB,MAAM,kBAA0B,AAAC,OAAe,GAAG;YACnD,MAAM,MAAM,KAAK,GAAG,KAAK;YAEzB,IAAI,kBAAkB,KAAK;gBACzB,MAAM;YACR,OAAO;gBACL,gBAAgB;gBAChB,aAAa;YACf;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC,qBAAqB;YACjC,gBAAgB;YAChB,aAAa;QACf;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,CAAC,aAAa,CAAC,cAAc;gBAC/B,OAAO,OAAO,CAAC;YACjB;QACF;mCAAG;QAAC;QAAW;QAAc;KAAO;IAEpC,IAAI,WAAW;QACb,qBAAO,6LAAC;YAAI,WAAU;sBAAgD;;;;;;IACxE;IAGA,IAAI,CAAC,cAAc;QACjB,OAAO;IACT;IAEA,OAAO;AACT;GAnFM;;QAGW,qIAAA,CAAA,YAAS;;;KAHpB;uCAqFS"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///home/pavan-kumar/pavan/others/front-end/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0]}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///home/pavan-kumar/pavan/others/front-end/node_modules/jwt-decode/build/esm/index.js"],"sourcesContent":["export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n"],"names":[],"mappings":";;;;AAAO,MAAM,0BAA0B;AACvC;AACA,kBAAkB,SAAS,CAAC,IAAI,GAAG;AACnC,SAAS,iBAAiB,GAAG;IACzB,OAAO,mBAAmB,KAAK,KAAK,OAAO,CAAC,QAAQ,CAAC,GAAG;QACpD,IAAI,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,IAAI,WAAW;QACnD,IAAI,KAAK,MAAM,GAAG,GAAG;YACjB,OAAO,MAAM;QACjB;QACA,OAAO,MAAM;IACjB;AACJ;AACA,SAAS,gBAAgB,GAAG;IACxB,IAAI,SAAS,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM;IAClD,OAAQ,OAAO,MAAM,GAAG;QACpB,KAAK;YACD;QACJ,KAAK;YACD,UAAU;YACV;QACJ,KAAK;YACD,UAAU;YACV;QACJ;YACI,MAAM,IAAI,MAAM;IACxB;IACA,IAAI;QACA,OAAO,iBAAiB;IAC5B,EACA,OAAO,KAAK;QACR,OAAO,KAAK;IAChB;AACJ;AACO,SAAS,UAAU,KAAK,EAAE,OAAO;IACpC,IAAI,OAAO,UAAU,UAAU;QAC3B,MAAM,IAAI,kBAAkB;IAChC;IACA,WAAW,CAAC,UAAU,CAAC,CAAC;IACxB,MAAM,MAAM,QAAQ,MAAM,KAAK,OAAO,IAAI;IAC1C,MAAM,OAAO,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI;IAClC,IAAI,OAAO,SAAS,UAAU;QAC1B,MAAM,IAAI,kBAAkB,CAAC,uCAAuC,EAAE,MAAM,GAAG;IACnF;IACA,IAAI;IACJ,IAAI;QACA,UAAU,gBAAgB;IAC9B,EACA,OAAO,GAAG;QACN,MAAM,IAAI,kBAAkB,CAAC,kDAAkD,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IAC7G;IACA,IAAI;QACA,OAAO,KAAK,KAAK,CAAC;IACtB,EACA,OAAO,GAAG;QACN,MAAM,IAAI,kBAAkB,CAAC,gDAAgD,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IAC3G;AACJ","ignoreList":[0]}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}