{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/pavan-kumar/pavan/dummy/front-end/components/ProtectedRoute.tsx"],"sourcesContent":["\"use client\";\n\nimport type React from 'react';\nimport { useEffect, useState } from 'react'\nimport { jwtDecode } from 'jwt-decode';\nimport { Navigate } from 'react-router-dom';\n\nconst ProtectedRoute = ({ children }: {children: React.ReactNode}) => {\n    const [isAuthorized, setIsAuthorized] = useState(-1);\n\n    useEffect(() => {\n      auth().catch(() => setIsAuthorized(0));\n    },);\n\n    const refresh = async () => {\n      const refreshToken: string | null = localStorage.getItem(REFRESH_TOKEN);\n\n      try{\n        const res = await api.post(\"auth/token/refresh\", {refresh: refreshToken});\n\n        if (res.status === 200){\n          setIsAuthorized(1);\n          localStorage.setItem(ACCESS_TOKEN, res.data.access);\n        } else {\n          setIsAuthorized(0);\n        }        \n      } catch (error) {\n        console.log(\"Error in Refreshing Token\", error);\n        setIsAuthorized(0);\n      }\n    }\n\n    const auth = async () => {\n      const token: string | null = localStorage.getItem(ACCESS_TOKEN);\n\n      if (!token){\n        setIsAuthorized(0);\n        return;\n      }\n\n      let decode;\n      try{\n        decode = jwtDecode(token);\n      }\n      catch(error){\n        console.log(\"Error in Decoding\", error);\n        setIsAuthorized(0)\n        return;\n      }\n      const tokenExpiration: number | undefined = decode.exp;\n      const now = Date.now() / 1000;\n\n      if (tokenExpiration && tokenExpiration < now){\n        await refresh();\n      } else {\n        setIsAuthorized(1);\n      }\n    };\n\n    if (isAuthorized === -1){\n      return <div> loading... </div>\n    }\n  \n    return (isAuthorized == 1) ? children : <Navigate to=\"/auth/login\" />;\n};\n\nexport default ProtectedRoute\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;;;AALA;;;;AAOA,MAAM,iBAAiB,CAAC,EAAE,QAAQ,EAA+B;;IAC7D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,CAAC;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,OAAO,KAAK;4CAAC,IAAM,gBAAgB;;QACrC;;IAEA,MAAM,UAAU;QACd,MAAM,eAA8B,aAAa,OAAO,CAAC;QAEzD,IAAG;YACD,MAAM,MAAM,MAAM,IAAI,IAAI,CAAC,sBAAsB;gBAAC,SAAS;YAAY;YAEvE,IAAI,IAAI,MAAM,KAAK,KAAI;gBACrB,gBAAgB;gBAChB,aAAa,OAAO,CAAC,cAAc,IAAI,IAAI,CAAC,MAAM;YACpD,OAAO;gBACL,gBAAgB;YAClB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC,6BAA6B;YACzC,gBAAgB;QAClB;IACF;IAEA,MAAM,OAAO;QACX,MAAM,QAAuB,aAAa,OAAO,CAAC;QAElD,IAAI,CAAC,OAAM;YACT,gBAAgB;YAChB;QACF;QAEA,IAAI;QACJ,IAAG;YACD,SAAS,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAD,EAAE;QACrB,EACA,OAAM,OAAM;YACV,QAAQ,GAAG,CAAC,qBAAqB;YACjC,gBAAgB;YAChB;QACF;QACA,MAAM,kBAAsC,OAAO,GAAG;QACtD,MAAM,MAAM,KAAK,GAAG,KAAK;QAEzB,IAAI,mBAAmB,kBAAkB,KAAI;YAC3C,MAAM;QACR,OAAO;YACL,gBAAgB;QAClB;IACF;IAEA,IAAI,iBAAiB,CAAC,GAAE;QACtB,qBAAO,6LAAC;sBAAI;;;;;;IACd;IAEA,OAAO,AAAC,gBAAgB,IAAK,yBAAW,6LAAC,+KAAA,CAAA,WAAQ;QAAC,IAAG;;;;;;AACzD;GAzDM;KAAA;uCA2DS"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}